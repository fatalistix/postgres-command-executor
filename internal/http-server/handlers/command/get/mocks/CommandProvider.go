// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	models "github.com/fatalistix/postgres-command-executor/internal/domain/models"
	mock "github.com/stretchr/testify/mock"
)

// CommandProvider is an autogenerated mock type for the CommandProvider type
type CommandProvider struct {
	mock.Mock
}

// Command provides a mock function with given fields: id
func (_m *CommandProvider) Command(id int64) (models.Command, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for Command")
	}

	var r0 models.Command
	var r1 error
	if rf, ok := ret.Get(0).(func(int64) (models.Command, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int64) models.Command); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Command)
	}

	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCommandProvider creates a new instance of CommandProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCommandProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *CommandProvider {
	mock := &CommandProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
